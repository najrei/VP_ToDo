@model Todo.Models.Aufgabe

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Aufgabe</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @Html.LabelFor(model => model.BeschreibungText, new { @class = "control-label col-md-2"})
                <div>
                    @Html.EditorFor(model => model.BeschreibungText, new { htmlAttribute = new {@class ="form-control", required = "required", title = "Die aufgabe muss mindesten 10 Zeichen lang sein."}})
                    @Html.ValidationMessageFor(model => model.BeschreibungText, "", new { @class = "text-danger"})
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.AbgabeTime, new { @class = "control-label col-md-2"})
                <div>
                    @Html.EditorFor(model => model.AbgabeTime)
                    @Html.ValidationMessageFor(model => model.AbgabeTime, "", new { @class = "text-danger"})
                </div>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
